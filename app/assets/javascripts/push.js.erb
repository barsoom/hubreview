var scheme   = "<%= Rails.env.production? ? 'wss://' : 'ws://' %>";
var uri      = scheme + window.document.location.host + "/";
var ws       = new WebSocket(uri);
var lastPingTime = new Date();

setupLinkOpening = function() {
  // Unless ?open_in_same_page=true is set, default to opening in new page.
  // Set client side because we need to be able to push out one version of
  // new pages during github receive for everyone.
  if (window.location.href.indexOf("open_in_same_page") == -1) {
    $(".rev a").attr("target", "_blank")
  }
}

ws.onmessage = function(message) {
  if(message.data == "ping") {
    lastPingTime = new Date();
    console.log("Got ping from server.")
  } else {
    var data = JSON.parse(message.data);
    selector = $("#revision_" + data.revision_id);

    // Add place for new revision
    if($(selector).length == 0) {
      $(".revisions").prepend('<div id="revision_' + data.revision_id + '">' + data.html + '</div>');
    }
    else {
      // Update old ones
      $("#revision_" + data.revision_id).html(data.html);
    }

    setupLinkOpening();
  }
};

reloadWhenSocketConnectionIsLost = function() {
  currentTime = new Date();
  secondsSinceLastUpdate = (currentTime - lastPingTime) / 1000.0;

  if(secondsSinceLastUpdate > 10) {
    location.reload();
  }
}

window.setInterval(reloadWhenSocketConnectionIsLost, 5000);

$(document).ready(setupLinkOpening);
